name: Ohe-build

on:
  push:
    branches: 
      - develop1.0
    paths:
      - 'sushi-config.yaml'
      - 'input/**'
      - '.github/workflows/main.yml'
      - 'script/*.py'
  pull_request:
    branches: [ develop1.0 ]
  repository_dispatch:
    types: [update]
jobs:
  turn:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0']
    environment: SSH_PORT_JPFHIR  # JAMI WG アップロードサイトに関するアクセス情報の環境名
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.client_payload.ref }}
        submodules: true

    - name: move eClinicalSummary fsh files to input directory
      run: |
        mkdir -p input/fsh/eClinicalSummary/
        mv eClinicalSummary/fsh/* input/fsh/eClinicalSummary/
        mv eClinicalSummary/aliases-eclinicalsummary.fsh input/fsh/eClinicalSummary/
        mv eClinicalSummary/pagecontent/* input/pagecontent/
    - name: makedir ./output
      run: | 
        mkdir output
        mkdir fsh-generated
        touch testfile
    - name: ssh key generate
      run: echo "$SSH_PRIVATE_KEY" > key && chmod 600 key
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_TO_JPFHIR }}
    - name: rsync remote-site-deploy
      run: rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p 8022" --delete ./output ./fsh-generated r2217734@www41.onamae.ne.jp:/home/r2217734/public_html/jpfhir.jp/eMunicipalCheckup/ --exclude .htaccess


    - name: Setup npm
      uses: actions/setup-node@v2
      with: 
        check-latest: true

    - name: Setup Sushi
      run: |
        sudo npm install -g fsh-sushi
    - name: Install Jekyll
      run: |
        sudo apt-get install jekyll

    - name: Download IG Publisher
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: HL7/fhir-ig-publisher
        tag: '1.3.10'
        path: .
        file: publisher.jar

    - name: Download Japanese version of hl7.fhir.core package
      uses: wei/wget@v1
      with:
        args:  https://jpfhir.jp/fhir/hl7.fhir.r4.core-4.0.1.tgz

    - name: Run IG Publisher
      env:
        PACKAGE: jp-core.r4#1.1.1-snap
        PACKAGECORE: hl7.fhir.r4.core#4.0.1
      run: | 
        mkdir input-cache
        mv ./publisher.jar ./input-cache
        mv hl7.fhir.r4.core-4.0.1.tgz  $PACKAGECORE.tgz
        : # - name: Wget IG PublisherJPFHIR
        : # uses: wei/wget@v1
        : # with:
        : #  args:  https://tx.jpfhir.jp/download/publisherJPFHIR.jar
        : # this is a comment:  ls -la ./input-cache
        mkdir -p /home/runner/.fhir
        mkdir -p  /home/runner/.fhir/packages
        mkdir -p  /home/runner/.fhir/packages/$PACKAGE
        mkdir -p  /home/runner/.fhir/packages/$PACKAGECORE
        : # local cache にpackage をcopyして展開する
        cp ./packages_snapshot/$PACKAGE.tgz /home/runner/.fhir/packages/$PACKAGE/$PACKAGE.tgz
        : # cp ./packages_snapshot/$PACKAGECORE.tgz /home/runner/.fhir/packages/$PACKAGECORE/$PACKAGECORE.tgz
        cp $PACKAGECORE.tgz /home/runner/.fhir/packages/$PACKAGECORE/$PACKAGECORE.tgz
        tar xzf /home/runner/.fhir/packages/$PACKAGE/$PACKAGE.tgz -C /home/runner/.fhir/packages/$PACKAGE/
        tar xzf /home/runner/.fhir/packages/$PACKAGECORE/$PACKAGECORE.tgz -C /home/runner/.fhir/packages/$PACKAGECORE/
        unset DISPLAY
        : # 
        java -Xmx4G -Djava.awt.headless=true -jar ./input-cache/publisher.jar -ig ig.ini  -tx https://tx.jpfhir.jp:8081
    - name: replace url of html files referring base package
      run:  |
        : # https://simplifier.net/resolve?scope=jp-core.r4@1.1.1-snap&amp;canonical=http://jpfhir.jp/fhir/core/StructureDefinition/JP_Observation_Common"
        : #   ↓
        : # https://jpfhir.jp/fhir/core/1.1.1/StructureDefinition-jp-observation-common.html
        cd output
        for file in StructureDefinition-*.html
        do
          python ../script/replaceUrls.py $file 1.1.1 >$file".2.html"
          mv $file".2.html" $file
        done   
        cd ..
    - name: ssh key generate
      run: echo "$SSH_PRIVATE_KEY" > key && chmod 600 key; ls -l key
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_TO_JPFHIR }}

    - name: prepare gtz files for upload to remote site
      env:
        VERSION: 0.9.7
      run: | 
        : # -- diff パッケージの作成
        cd fsh-generated
        mv resources package
        cp ../forPackage/package.json_jpreferral_$VERSION-diff package/package.json
        tar czf jp-ereferral-$VERSION-diff.tgz package
        mv jp-ereferral-$VERSION-diff.tgz ../jp-ereferral-$VERSION-diff.tgz
        cd ..
        : # -- diff パッケージとoutputディレクトリをアップロード
        mv output output_$VERSION
        tar czf output_$VERSION.tgz output_$VERSION
        rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT_JPFHIR }}" output_$VERSION.tgz jp-ereferral-$VERSION-diff.tgz  ${{ secrets.JAMIWG_WEBHOST }}:${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/eReferral/ --exclude .htaccess
        : # -- VERSION環境変数を次の行の中でも再定義してください。
        ssh -i key  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -p ${{ secrets.SSH_PORT_JPFHIR }} ${{ secrets.JAMIWG_WEBHOST }}   'VERSION=0.9.7; cd ${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/eReferral/ ; rm -rf output_$VERSION; tar xzf output_$VERSION.tgz; '
        : # -- snapshot パッケージの作成してアップロード
        sushi -s .
        cd fsh-generated
        mv resources package
        cp ../forPackage/package.json_jpreferral_$VERSION-snap package/package.json
        tar czf jp-ereferral-$VERSION-snap.tgz package
        mv jp-ereferral-$VERSION-snap.tgz ../jp-ereferral-$VERSION-snap.tgz
        cd ..
        rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT_JPFHIR }}" jp-ereferral-$VERSION-snap.tgz  ${{ secrets.JAMIWG_WEBHOST }}:${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/eReferral/ --exclude .htaccess

